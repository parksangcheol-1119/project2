/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-06-14 13:48:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._08Board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import utils.JSFunction;

public final class Write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/08Board/./isLogin.jsp", Long.valueOf(1622678698033L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("utils.JSFunction");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(' ');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	/*
	session영역에 회원인증 정보가 저장되어 있는지 확인한다.
	만약 로그인에 성공 했다면 USER_ID라는 속성값이 저장되어 있을것이다.
	*/
	if(session.getAttribute("USER_ID")==null){
		//로그인 정보가 없다면 로그인 페이지로 이동한다. 
		JSFunction.alertLocation("로그인 후 이용해주십시요.", 
				"../06Session/Login.jsp", out);
		/*
		Javascript와 JSP가 같이 있으면 JSP코드가 우선적으로 실행되므로
		반드시 return을 통해 실행을 중지해야 한다. 
		*/
		return;
	} 

      out.write("     \r\n");
      out.write('\n');

String searchField = request.getParameter("searchField");//검색필드
String searchWord = request.getParameter("searchWord");//검색어
String queryStr = "";
if(searchWord!=null){
	//검색 파라미터 추가하기
	queryStr = "&searchField="+searchField+"&searchWord="+searchWord;
}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원제 게시판</title>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t//쓰기폼에 빈값이 있는지를 확인해주는 함수\n");
      out.write("\tfunction formValidate(f){\n");
      out.write("\t\tif(f.title.value==\"\"){\n");
      out.write("\t\t\talert(\"제목을 입력하세요\");\n");
      out.write("\t\t\tf.title.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(f.content.value==\"\"){\n");
      out.write("\t\t\talert(\"내용을 입력하세요\");\n");
      out.write("\t\t\tf.content.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h2>회원제 게시판 - 글쓰기(Write)</h2>\n");
      out.write("<form name=\"writeFrm\" method=\"post\" action=\"WriteProcess.jsp\" \n");
      out.write("\tonsubmit=\"return formValidate(this);\">\n");
      out.write("<!--  \n");
      out.write("\t게시판 테이블인 board의 컬럼명과 input태그의 name속성값은\n");
      out.write("\t똑같이 맞춰주는것이 개발에 유리하다. \n");
      out.write("-->\t\n");
      out.write("<table border=\"1\" width=\"90%\">\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td>제목</td>\n");
      out.write("\t\t<td>\n");
      out.write("\t\t\t<input type=\"text\" name=\"title\" style=\"width:90%;\" />\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td>내용</td>\n");
      out.write("\t\t<td>\n");
      out.write("\t\t\t<textarea name=\"content\" style=\"width:90%;height:100px;\"></textarea>\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td colspan=\"2\" align=\"center\">\n");
      out.write("\t\t\t<button type=\"submit\">작성완료</button>\n");
      out.write("\t\t\t<button type=\"reset\">RESET</button>\n");
      out.write("\t\t\t<button type=\"button\" onclick=\"location.href='List.jsp?");
      out.print(queryStr );
      out.write("';\">\n");
      out.write("\t\t\t\t리스트바로가기\n");
      out.write("\t\t\t</button>\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("</table>\t\n");
      out.write("</form>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
