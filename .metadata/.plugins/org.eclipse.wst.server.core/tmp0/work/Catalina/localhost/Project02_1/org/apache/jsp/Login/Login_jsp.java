/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-06-13 12:28:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Login.jsp</title>\r\n");
      out.write("<style>\r\n");
      out.write(" header{\r\n");
      out.write("                display:flex;\r\n");
      out.write("                justify-content: center;\r\n");
      out.write("            }\r\n");
      out.write("            form{\r\n");
      out.write("                padding:10px;\r\n");
      out.write("            }\r\n");
      out.write("            .input-box{\r\n");
      out.write("                position:relative;\r\n");
      out.write("                margin:10px 0;\r\n");
      out.write("            }\r\n");
      out.write("            .input-box > input{\r\n");
      out.write("                background:transparent;\r\n");
      out.write("                border:none;\r\n");
      out.write("                border-bottom: solid 1px #ccc;\r\n");
      out.write("                padding:20px 0px 5px 0px;\r\n");
      out.write("                font-size:14pt;\r\n");
      out.write("                width:100%;\r\n");
      out.write("            }\r\n");
      out.write("            input::placeholder{\r\n");
      out.write("                color:transparent;\r\n");
      out.write("            }\r\n");
      out.write("            input:placeholder-shown + label{\r\n");
      out.write("                color:#aaa;\r\n");
      out.write("                font-size:14pt;\r\n");
      out.write("                top:15px;\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("            input:focus + label, label{\r\n");
      out.write("                color:#8aa1a1;\r\n");
      out.write("                font-size:10pt;\r\n");
      out.write("                pointer-events: none;\r\n");
      out.write("                position: absolute;\r\n");
      out.write("                left:0px;\r\n");
      out.write("                top:0px;\r\n");
      out.write("                transition: all 0.2s ease ;\r\n");
      out.write("                -webkit-transition: all 0.2s ease;\r\n");
      out.write("                -moz-transition: all 0.2s ease;\r\n");
      out.write("                -o-transition: all 0.2s ease;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            input:focus, input:not(:placeholder-shown){\r\n");
      out.write("                border-bottom: solid 1px #8aa1a1;\r\n");
      out.write("                outline:none;\r\n");
      out.write("            }\r\n");
      out.write("            input[type=submit]{\r\n");
      out.write("                background-color: #8aa1a1;\r\n");
      out.write("                border:none;\r\n");
      out.write("                color:white;\r\n");
      out.write("                border-radius: 5px;\r\n");
      out.write("                width:100%;\r\n");
      out.write("                height:35px;\r\n");
      out.write("                font-size: 14pt;\r\n");
      out.write("            }\r\n");
      out.write("            #forgot{\r\n");
      out.write("                text-align: right;\r\n");
      out.write("                font-size:12pt;\r\n");
      out.write("                color:rgb(164, 164, 164);\r\n");
      out.write("                margin:10px 0px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("로그인 실패시 에러메세지 출력 (06세션의 Login 교안)\r\n");
      out.write(" -->\r\n");
      out.write("\t<span style=\"color:red; font-size:1.5em;\">\t\t\r\n");
      out.write("\t");
      out.print(request.getAttribute("ERROR_MSG")==null ?
		"" : request.getAttribute("ERROR_MSG") );
      out.write("\r\n");
      out.write("</span>\r\n");

//세션 영역에 회원인증 정보가 없다면 로그아웃 상태
if(session.getAttribute("USER_ID")==null){ 

      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t//로그인 폼의 입력값을 검증하는 JS함수 정의\r\n");
      out.write("\tfunction loginValidate(fn){\r\n");
      out.write("\t\tif(!fn.user_id.value){\r\n");
      out.write("\t\t\talert(\"아이디를 입력하세요\");\r\n");
      out.write("\t\t\tfn.user_id.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(fn.user_pw.value==\"\"){\r\n");
      out.write("\t\t\talert(\"패스워드를 입력하세요\");\r\n");
      out.write("\t\t\tfn.user_pw.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<header>\r\n");
      out.write("\t<h2>Login</h2>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("\t<form action=\"LoginProcessMap.jsp\" method=\"POST\" name=\"loginfrm\"\r\n");
      out.write("\tonsubmit=\"return loginValidate(this);\">\r\n");
      out.write("\t\r\n");
      out.write("\t <div class=\"input-box\">\r\n");
      out.write("\t <input id=\"username\" type=\"text\" name=\"user_id\" placeholder=\"아이디\"> \r\n");
      out.write("\t <label for=\"username\">아이디</label>\r\n");
      out.write("\t </div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"input-box\"> <input id=\"password\" type=\"password\" name=\"user_pw\" placeholder=\"비밀번호\"> \r\n");
      out.write("\t<label for=\"password\">비밀번호</label> \r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t <div class=\"member\" id=\"member\">\r\n");
      out.write("\t <a href=\"/Project02_1/WebContent/member/join.jsp\"></a></div>\r\n");
      out.write("\t <input type=\"submit\" value=\"회원가입\">\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"forgot\"></div>\r\n");
      out.write("\t <input type=\"submit\" value=\"로그인\" >\r\n");
      out.write("\t</form>\t\r\n");
 
}else{
//세션영역에 회원인증 정보가 있을때이므로 로그인이 된 상태

      out.write("\r\n");
      out.write("\t<table border='1'>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"text-align:center;\">\t\t\t\t\r\n");
      out.write("\t\t\t\t");
      out.print(session.getAttribute("USER_NAME") );
      out.write(" 회원님, \r\n");
      out.write("\t\t\t\t\t로그인 하셨습니다.\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t즐거운 시간 보내세요 ^^*\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t<a href=\"Logout.jsp\">[로그아웃]</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
